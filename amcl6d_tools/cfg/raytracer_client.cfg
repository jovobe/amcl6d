#!/usr/bin/env python
PACKAGE = "amcl6d_tools"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("raytrace", bool_t, 512, "Toggle (either on or off) to issue a raytrace", False)
gen.add("position_x", double_t, 1, "pose.position.x", 0)
gen.add("position_y", double_t, 2, "pose.position.y", 0)
gen.add("position_z", double_t, 4, "pose.position.z", 0)
gen.add("orientation_x", double_t, 8, "pose.orientation.x / Euler yaw", 0)
gen.add("orientation_y", double_t, 16, "pose.orientation.y / Euler pitch", 0)
gen.add("orientation_z", double_t, 32, "pose.orientation.z / Euler roll", 0)
gen.add("orientation_w", double_t, 64, "pose.orientation.w / ignored", 0)

type_enum = gen.enum([ 
                gen.const("Euler", int_t, 0, "Use euler angles."),
                gen.const("Quaternion", int_t, 1, "Use quaternions.")
                ], 
                "An enum to choose how to interpret the rotations.")
gen.add("type", int_t, 128, "A parameter to choose how to interpret the orientation. If Euler angles is chosen, the orientation.w field will be ignored.", 0, 0, 1, edit_method=type_enum)

angle_enum = gen.enum([
                 gen.const("Rad", int_t, 0, "Use radians."),
                 gen.const("Deg", int_t, 1, "Use degrees.")
                 ],
                 "An enum to choose how the rotation numbers are interpreted.")
gen.add("angle", int_t, 256, "Are your input values radians or degrees?", 0, 0, 1, edit_method=angle_enum)

exit(gen.generate(PACKAGE, "raytracer_client", "raytracer_client"))
